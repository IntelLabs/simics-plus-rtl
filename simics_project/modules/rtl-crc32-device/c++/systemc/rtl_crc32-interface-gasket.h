// -*- mode: C++; c-file-style: "virtutech-c++" -*-

/*
  Â© 2024 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

// This file is generated by the script bin/gen-cc-interface

#ifndef PTA_SIMICS_PLUS_RTL_SIMICS_PROJECT_RTL_CRC32_INTERFACE_GASKET_H
#define PTA_SIMICS_PLUS_RTL_SIMICS_PROJECT_RTL_CRC32_INTERFACE_GASKET_H

#include <simics/systemc/simics2tlm/gasket_owner.h>
#include <simics/systemc/simics2tlm/gasket_adapter.h>


namespace simics {
namespace systemc {
namespace iface {

class RtlCrc32SCInterface {

    // Function convert C interface call to C++ interface call
      public:
        virtual bool start_crc( unsigned int src, unsigned int dst, size_t size, bool blocking) = 0;

        virtual ~RtlCrc32SCInterface() {};
};

}  // namespace iface
}  // namespace systemc
}  // namespace simics

//

namespace simics {
namespace systemc {
namespace simics2tlm {

class RtlCrc32GasketAdapter 
           : public iface::RtlCrc32SCInterface
           , public GasketAdapter<iface::RtlCrc32SCInterface>
{
public:
    RtlCrc32GasketAdapter(iface::RtlCrc32SCInterface *iface, iface::SimulationInterface *simulation)
    : iface_(iface), simulation_(simulation) {}


      public:
        bool start_crc( unsigned int src, unsigned int dst, size_t size, bool blocking);

        simics2tlm::GasketOwner *gasket_owner() const override
        {
          return dynamic_cast<simics2tlm::GasketOwner *>(iface_);
        }

    private:
        iface::RtlCrc32SCInterface *iface_;
        iface::SimulationInterface *simulation_;
};

class RtlCrc32Device : public simics::systemc::iface::RtlCrc32SCInterface
                   , public GasketOwner
{
   public:
    RtlCrc32Device() {
        set_type();
    }
            bool start_crc( unsigned int src, unsigned int dst, size_t size, bool blocking);
 

      private:
        iface::TransactionPool pool_;
};

}  // namespace simics2tlm
}  // namespace systemc
}  // namespace simics
#include "rtl_crc32-interface-gasket.cpp"
#endif
